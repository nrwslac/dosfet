#
# DOSFET serial device database template file
#
# Required Macros:
#   P
#       EPICS prefix.
#       Every PV for this device starts with this prefix
#	DEV
#		asyn port
#	CH
#		The name of the 8 RadFET channels. Internally known as A1-D2
#	SENSOR
#		Must map to the hardware connections A-D
#	DRAIN
#		Must map to hardware connections for each sensor, 1 or 2
#
# Optional Macro:
#	CAL
#		Calibration factor. The manufacturer may provide a voltage scaling
#		factor for each DOSFET-L01. Default is 1, no scaling.
#
#

# Macros:
#  P    - device name
#  DEV - Asyn port
file dosfetCommon.template
{
pattern {  P     , DEV      }
	{ '$(P)' , '$(DEV)' }
}

#file radm_info.template {
#    pattern
#    {    P,      LOC, TYPE }
#    { '$(P)', '$(LOC)', 1  }
#}

# Macros:
#  P      - device name
#  SENSOR - Must map to the hardware connections A-D
#  DEV   - Asyn port
file dosfetChannel.template
{
pattern {  USER_P ,  P      , SENSOR , DEV       }
	{  RADM:FEE:RMW, '$(P)' ,   A    , '$(DEV)'  }
	{  RADM:FEE:RMX , '$(P)' ,   B    , '$(DEV)'  }
	{  RADM:FEE:RMY , '$(P)' ,   C    , '$(DEV)'  }
	{  RADM:FEE:RMZ , '$(P)' ,   D    , '$(DEV)'  }
}

file dosfetChannelWrapper.template
{
pattern { USER_P    , P  ,  SENSOR       }
	{ RADM:FEE:RMW, '$(P)' ,   A  }
	{ RADM:FEE:RMX, '$(P)' ,   B  }
	{ RADM:FEE:RMY, '$(P)' ,   C  }
	{ RADM:FEE:RMZ, '$(P)' ,   D  }
}

# Macros:
#  P      - device name
#  SENSOR - Must map to the hardware connections A-D
#  DRAIN  - Must map to hardware connections for each sensor, 1 or 2
#  DEV - Asyn port
file dosfetDrain.template
{
pattern {  P      ,  SENSOR,  DRAIN,	DEV	   }
	{  '$(P)' ,	A ,	1  ,	'$(DEV)'  }
	{  '$(P)' ,	B ,	1  ,	'$(DEV)'  }
	{  '$(P)' ,	C ,	1  ,	'$(DEV)'  }
	{  '$(P)' ,	D ,	1  ,	'$(DEV)'  }
	{  '$(P)' ,	A ,	2  ,	'$(DEV)'  }
	{  '$(P)' ,	B ,	2  ,	'$(DEV)'  }
	{  '$(P)' ,	C ,	2  ,	'$(DEV)'  }
	{  '$(P)' ,	D ,	2  ,	'$(DEV)'  }
}
# Macros:
#  P = device
#  SENSOR - Must map to the hardware connections A-D
#  DEV   - Asyn port
#file radfet_history_ch.db
#{
#pattern	{  P                          ,	SENSOR,	DRAIN }
#		{  '$(P)':$(SENSOR):$(DRAIN): ,	  A   ,	 1    }
#		{  '$(P)':$(SENSOR):$(DRAIN): ,	  B   ,	 1    }
#		{  '$(P)':$(SENSOR):$(DRAIN): ,	  C   ,	 1    }
#		{  '$(P)':$(SENSOR):$(DRAIN): ,	  D   ,  1    }
#		{  '$(P)':$(SENSOR):$(DRAIN): ,	  A   ,  2    }
#		{  '$(P)':$(SENSOR):$(DRAIN): ,	  B   ,	 2    }
#		{  '$(P)':$(SENSOR):$(DRAIN): ,	  C   ,	 2    }
#		{  '$(P)':$(SENSOR):$(DRAIN): ,	  D   ,	 2    }
#}




